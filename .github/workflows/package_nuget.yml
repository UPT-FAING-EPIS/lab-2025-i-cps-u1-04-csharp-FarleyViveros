name: Build and Publish NuGet Package

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ['Bank/Bank.Domain/**']

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Extract version from csproj
      id: version
      run: |
        VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" CustomerApp/CustomerApp.Domain/CustomerApp.Domain.csproj)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Restore dependencies
      run: dotnet restore CustomerApp/CustomerApp.Domain/CustomerApp.Domain.csproj

    - name: Build project
      run: dotnet build CustomerApp/CustomerApp.Domain/CustomerApp.Domain.csproj --configuration Release

    - name: Pack NuGet Package
      run: dotnet pack CustomerApp/CustomerApp.Domain/CustomerApp.Domain.csproj --configuration Release --output ./nupkgs

    - name: Publish NuGet Package to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        dotnet nuget push ./nupkgs/*.nupkg \
          --skip-duplicate \
          -k ${{ secrets.GITHUB_TOKEN }} \
          -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

    - name: Create tag automatically
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        VERSION=${{ steps.version.outputs.version }}
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag -a v$VERSION -m "Release v$VERSION"
        git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} v$VERSION

    - name: Trigger release_version.yml
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        VERSION=v${{ steps.version.outputs.version }}
        curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/release_version.yml/dispatches \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: token ${GH_PAT}" \
        -d '{"ref":"main", "inputs": {"version": "'"$VERSION"'"}}'


